# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.kernelPackages = pkgs.linuxPackages;
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  # Use the systemd-boot EFI boot loader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  # Clean tmp on reboot
  boot.cleanTmpDir = true;

  # Minimal list of modules to use the EFI system partition
  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];

  # Configuration to use your Luks device
  boot.initrd.luks.fido2Support = true;
  boot.initrd.luks.devices = {
    "nixos-enc" = {
      device = "/dev/nvme0n1p1";
      preLVM = true; # You may want to set this to false if you need to start a network service first
      fido2.passwordLess = true;
      fido2.credential = "1174b4f8cfd2c80d09e8459ec0d68b21";
      bypassWorkqueues = true;
    };
  };

  # Enable scheduled TRIM for SSD
  services.fstrim.enable = true;

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/a1a39e3a-fa41-40ca-9923-22aaf03c4ada";
      fsType = "ext4";
      options = [ "noatime" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/8B82-CD1F";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/bb41de47-faeb-49f9-b6e2-5462d5b73575"; }
    ];

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # Networking
  networking.hostName = "desktop";
  networking.hosts = {
    "127.0.1.1" = [ "desktop" ];
    "::1" = [ "localhost" ];
  };

  # The global useDHCP flag is deprecated, therefore explicitly set to false here.
  # Per-interface useDHCP will be mandatory in the future, so this generated config
  # replicates the default behaviour.
  networking.useDHCP = false;
  networking.interfaces.eno1.useDHCP = true;

  # Graphics
  hardware.opengl.enable = true;
  services.xserver.videoDrivers = [ "nvidia" ];

  # hardware.opengl.extraPackages = [ pkgs.mesa.drivers ];
  # services.xserver.videoDrivers = [ "nvidia" "intel" ];

  nixpkgs.config.allowUnfreePredicate = pkg: builtins.elem (lib.getName pkg) [
    "zoom"
    "cudatoolkit"
    "cudatoolkit-11-cudnn"
    "libcublas"
    "nvidia-x11"
    "nvidia-settings"
    "corefonts"
    "Oracle_VM_VirtualBox_Extension_Pack"
  ];

  # Initial system version
  system.stateVersion = "21.11";
}
